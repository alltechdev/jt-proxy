name: Daily Worker Rotation

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  rotate-worker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate random worker name
        id: random
        run: |
          # Generate simple unique name
          NAME=$(date +%s | tail -c 9)
          echo "name=$NAME" >> "$GITHUB_OUTPUT"
          echo "Generated name: $NAME"

      - name: Update wrangler.toml
        run: |
          # Update worker name
          sed -i "s/name = .*/name = \"${{ steps.random.outputs.name }}-proxy\"/" wrangler.toml
          echo "Updated wrangler.toml:"
          cat wrangler.toml

      - name: Deploy worker
        run: |
          # Deploy using environment variable for authentication
          echo "Deploying worker with name: ${{ steps.random.outputs.name }}-proxy"
          if ! npx wrangler deploy; then
            echo "Deployment failed"
            exit 1
          fi
          echo "Deployment successful"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Update files and push
        run: |
          # Create current URL file
          WORKER_URL="https://${{ steps.random.outputs.name }}-proxy.abesternheim.workers.dev"
          echo "# Current Worker URL" > CURRENT_URL.md
          echo "**Today's URL:** $WORKER_URL" >> CURRENT_URL.md
          echo "**Deployed:** $(date -u)" >> CURRENT_URL.md

          # Update README using Python for better reliability
          python3 << EOF
          import re
          import sys

          try:
              with open('README.md', 'r') as f:
                  content = f.read()

              # Find and replace the Current URL section
              pattern = r'## Current URL.*?<!-- CURRENT_URL_MARKER -->'
              replacement = f"""## Current URL

**Today's active URL:** [{WORKER_URL}]({WORKER_URL})

<!-- CURRENT_URL_MARKER -->"""

              new_content = re.sub(pattern, replacement, content, flags=re.DOTALL)

              with open('README.md', 'w') as f:
                  f.write(new_content)

              print("README.md updated successfully")
          except Exception as e:
              print(f"Error updating README.md: {e}")
              sys.exit(1)
          EOF

          # Commit and push
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add wrangler.toml CURRENT_URL.md README.md

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Daily rotation: ${{ steps.random.outputs.name }}-proxy"
            echo "Changes committed successfully"

            if ! git push; then
              echo "Failed to push changes"
              exit 1
            fi
            echo "Changes pushed successfully"
          fi